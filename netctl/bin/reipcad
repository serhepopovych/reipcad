#!/bin/bash

# External tool dependencies, MUST always be defined,
# even if empty (e.g.: declare -a crt1_request_tools_list=())
declare -a crt1_request_tools_list=(
	'service'	# service(8)
	'cat'		# cat(1)
	'mkdir'		# mkdir(1)
	'rm'		# rm(1)
	'mv'		# mv(1)
)

# Source startup code
. /netctl/lib/bash/crt1.sh

# Source functions libraries
. /netctl/lib/bash/libbool.sh
. /netctl/lib/bash/librtti.sh
. /netctl/lib/bash/libstring.sh
. /netctl/lib/bash/libfile.sh
. /netctl/lib/bash/liblog.sh
. /netctl/lib/bash/libprocess.sh

# Source reconfiguration library
. /netctl/lib/bash/libreconf.sh

################################################################################

declare -r ipcad_default='/etc/default/ipcad'

# Source systemwide config if exists
nctl_SourceIfNotEmpty "$ipcad_default"

## If not specified in config, set this to default

# local config
[ -d "$REIPCAD_DIR" ] || REIPCAD_DIR="$NCTL_PREFIX/etc/reipcad"
[ -d "$REIPCAD_DATADIR" ] || REIPCAD_DATADIR="$REIPCAD_DIR/data"
[ -d "$REIPCAD_TEMPLATEDIR" ] || REIPCAD_TEMPLATEDIR="$REIPCAD_DIR/template"
[ -n "$REIPCAD_SYS_SVC_NAME" ] || REIPCAD_SYS_SVC_NAME='ipcad'

# systemwide config
[ -d "$IPCAD_DIR" ] || IPCAD_DIR='/etc/ipcad'

### DO NOT EDIT BELOW THIS LINE ###

# ipcad configuration files
declare -a ipcad_configs
nctl_templ_expand ipcad_configs \
	"$IPCAD_DIR/ipcad-%s.conf" "${REIPCAD_INSTANCES[@]}"
declare -i ipcad_configs_size=${#ipcad_configs[@]}

# ipcad candidate configuration files directory
declare -r REIPCAD_TMPDIR="$NCTL_TMPDIR/ipcad"

# templates
declare -a reipcad_templates
nctl_paths_expand_a reipcad_templates \
	"$REIPCAD_DIR/template/*.template"
declare -i reipcad_templates_size=${#reipcad_templates[@]}

## Lock subsystem: prevent from running multiple instances
nctl_subsys_lock
nctl_check_ok 'FAIL TO RUN "%s" SUBSYSTEM EXCLUSIVELY\n' "$NCTL_SUBSYS_NAME"

__restore_original_files=n
exit_handler()
{
	# revert before exit on failure
	if ! nctl_is_no "$__restore_original_files"; then
		echo '** Restoring original configuration **'

		# stop
		service "$REIPCAD_SYS_SVC_NAME" stop ||
			nctl_inc_rc nctl_inc

		# restore configuration files
		nctl_restore \
			"$ipcad_default" \
			"${ipcad_configs[@]}" \
			nctl_inc_rc nctl_rc

		# restart service
		service "$REIPCAD_SYS_SVC_NAME" restart ||
			nctl_inc_rc nctl_rc
	fi

	# remove backups
	nctl_cleanup \
		"$ipcad_default" \
		"${ipcad_configs[@]}" \
		nctl_inc_rc nctl_rc

	# remove temporary directory
	rm -rf "$REIPCAD_TMPDIR" ||
		nctl_inc_rc nctl_rc

	# Report end
	nctl_end_msg

	## Unlock subsystem
	nctl_subsys_unlock ||
		nctl_inc_rc nctl_rc

	exit $nctl_rc
}
trap 'exit_handler 2>&1 |nctl_log_pipe' EXIT

# Usage: reipcad_ipcad_cf_make <instance_list> ...
reipcad_ipcad_cf_make()
{
	local inst templ data f
	local ipcad_bin ipcad_opts ipcad_conf
	local __ipcad_conf
	local __ipcad_default="$REIPCAD_TMPDIR/ipcad"
	local -a svc_list

	# Usage: reipcad_ipcad_cf_add_warning
	reipcad_ipcad_cf_add_warning()
	{
		cat >>"$1" <<EOF

##
## ATTENTION!
## =========
##
## This file is generated by $program_invocation_short_name
## and your changes will be lost on next run.
##
## Adjust $program_invocation_short_name configuration instead.
##

EOF
	}

	# Usage: reipcad_ipcad_cf_head
	reipcad_ipcad_cf_head()
	{
		cat >"$__ipcad_default" <<EOF
# Defaults for ipcad initscript
# sourced by /etc/init.d/ipcad
# installed at /etc/default/ipcad by the $program_invocation_short_name
EOF
		reipcad_ipcad_cf_add_warning "$__ipcad_default"
	}

	# Usage reipcad_ipcad_cf_body
	reipcad_ipcad_cf_body()
	{
		local var_name

		nctl_str2sh_var "ipcad-$inst" var_name
		nctl_strtoupper "$var_name" var_name

		cat >>"$__ipcad_default" <<EOF
# $inst
${var_name}_RUN=yes
${var_name}_BIN='$ipcad_bin'
${var_name}_OPTS='$ipcad_opts'
${var_name}_CONF_FILE='$IPCAD_DIR/$ipcad_conf'

EOF
	}

	# Usage: reipcad_ipcad_cf_tail
	reipcad_ipcad_cf_tail()
	{
		cat >>"$__ipcad_default" <<EOF
# services
NCTL_SVC_LIST='${svc_list[*]}'
EOF
	}

	# Check for non-zero non-empty arguments
	local __ifs="$IFS"
	IFS=''
	f="$*"
	IFS="$__ifs"

	f="${#f}"
	[ "$f" -le 0 ] && return

	# Path to ipcad(8) binary.
	nctl_absolute 'ipcad' ipcad_bin || return

	# Create directory for new configuration files
	mkdir -p "$REIPCAD_TMPDIR" || return

	# Output initscript config file head
	reipcad_ipcad_cf_head || return

	svc_list=()
	for inst in "$@"; do
		ipcad_conf="ipcad-$inst.conf"
		__ipcad_conf="$REIPCAD_TMPDIR/$ipcad_conf"

		: >"$__ipcad_conf" || return

		reipcad_ipcad_cf_add_warning "$__ipcad_conf" || return

		for templ in "${reipcad_templates[@]}"; do
			# subhead
			[ -f "$templ" -a -r "$templ" ] || continue
			cat "$templ" || return

			# body
			data="${templ%%/template/*}/data/$inst/${templ##*/}"
			data="${data%.template}"
			for f in "$data"/*.conf; do
				[ -f "$f" -a -r "$f" ] || continue
				cat "$f" || return
			done
		done >>"$__ipcad_conf"

		nctl_set_val svc_list "${svc_list[@]}" "ipcad-$inst"

		# Output initscript config file body entry
		nctl_strtoupper "$inst" ipcad_opts
		nctl_get_val "REIPCAD_${ipcad_opts}_OPTS" ipcad_opts

		reipcad_ipcad_cf_body || return
	done

	# Output initscript config file tail
	reipcad_ipcad_cf_tail || return

	# Remove internal functions from global namespace
	unset -f reipcad_ipcad_cf_tail \
		 reipcad_ipcad_cf_body \
		 reipcad_ipcad_cf_head \
		 reipcad_ipcad_cf_add_warning
}

# Usage: reipcad_ipcad_cf_install <instance1> <instance2> ...
reipcad_ipcad_cf_install()
{
	local inst
	local ipcad_conf
	local __ipcad_default="$REIPCAD_TMPDIR/ipcad"

	for inst in "$@"; do
		ipcad_conf="ipcad-$inst.conf"
		mv -f "$REIPCAD_TMPDIR/$ipcad_conf" "$IPCAD_DIR/$ipcad_conf" || return
	done

	mv -f "$__ipcad_default" "$ipcad_default"
}

# Report start
nctl_begin_msg

# Create new configuration files
nctl_log_msg 'Creating new configuration files\n'
reipcad_ipcad_cf_make "${REIPCAD_INSTANCES[@]}" 2>&1 |nctl_log_pipe
nctl_check_ok 'ERRORS WHEN CREATING NEW CONFIGURATION FILES\n'

# Make backup of the original file(s) if needed
nctl_log_msg 'Backup original configuration\n'
__restore_original_files=y
nctl_backup \
	"$ipcad_default" \
	"${ipcad_configs[@]}" \
	2>&1 |nctl_log_pipe
nctl_check_ok 'ERRORS WHEN BACKUP FILES\n'

# Stop ipcad(8) service
nctl_log_msg 'Stop "%s" service\n' "$REIPCAD_SYS_SVC_NAME"
{
	echo -n "$REIPCAD_SYS_SVC_NAME: "
	service "$REIPCAD_SYS_SVC_NAME" stop
} 2>&1 |nctl_log_pipe
nctl_check_ok 'ERRORS WHEN STOPPING SERVICE\n'

# Replace current configuration files with new ones
nctl_log_msg 'Install new configuration files\n'
reipcad_ipcad_cf_install "${REIPCAD_INSTANCES[@]}" 2>&1 |nctl_log_pipe
nctl_check_ok 'ERRORS WHEN INSTALLING NEW CONFIGURATION FILES\n'

# Start ipcad(8) service
nctl_log_msg 'Start "%s" service\n' "$REIPCAD_SYS_SVC_NAME"
{
	echo -n "$REIPCAD_SYS_SVC_NAME: "
	service "$REIPCAD_SYS_SVC_NAME" start
} 2>&1 |nctl_log_pipe
nctl_check_ok 'ERRORS WHEN STARTING SERVICE\n'
__restore_original_files=n

exit $nctl_rc
